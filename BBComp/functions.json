{
    "ackley1": {
        "code": "var d = dim(x); var y = x*70 - 35 * ones(d); 20.0 - 20.0*(exp(-0.02 * sqrt(sqrnorm(y)/d))) - exp(sum(apply(range(d), cos(6.28318530717959 * y[lambda])))/d) + exp(1.0)",
        "dimension": -1
    },
    "ackley1-centered": {
        "code": "var d = dim(x); var y = 20 * x; var a = sum(apply(y, cos(6.28318530717959 * lambda))); 20 - 20 * exp(-0.2 * sqrt(sqrnorm(y) / d)) + 2.718281828459045 - exp(a / d)",
        "dimension": -1
    },
    "ackley3": {
        "code": "var d = 2; var y = x[1:2]*64 - 32 * ones(d); 242.6547717377207 - 200.0*(exp(-0.02 * sqrt(sqrnorm(y)))) + 5 * (exp(cos(3*y[1]) + sin(3*y[2])))",
        "dimension": 2
    },
    "ackley4": {
        "code": "var d = dim(x); var y = x*70 - 35 * ones(d); sum(apply(range(d-1), exp(-0.2) * sqrt(y[lambda] * y[lambda] + y[lambda + 1] * y[lambda + 1]) + 3.0 * (cos(2.0*y[lambda]) + sin(2.0*y[lambda + 1])) )) - (-4.591 + 0.000898365841)",
        "dimension": -1
    },
    "adjiman": {
        "code": "var y1 = -1.0 + x[1] * 3.0;\tvar y2 = -1.0 + x[2] * 2.0;  2.021806783359788 + cos(y1)*sin(y2) - y1/(y2 * y2 + 1.0)",
        "dimension": 2
    },
    "alpine1": {
        "code": "var d = dim(x); var y = x*20 - 10 * ones(d);\t\tsum(apply(y, abs(lambda*sin(lambda) + 0.1*lambda)))",
        "dimension": -1
    },
    "alpine2": {
        "code": "var d = dim(x); var y = x*10;\t\t\t\t\t-prod(apply(y, sqrt(abs(lambda))*sin(abs(lambda)))) + 2.808131180007006^d",
        "dimension": -1
    },
    "bartelsconn": {
        "code": "var d = 2; var y = x[1:2] * 1000 - 500 * ones(d); abs(y[1] * y[1] + y[2] * y[2] + y[1] * y[2]) + abs(sin(y[1])) + abs(cos(y[2])) - (1.0)",
        "dimension": 2
    },
    "beale": {
        "code": "var d = 2; var y = x[1:2] * 9 - 4.5 * ones(d);\t(1.5 - y[1] + y[1] * y[2])^2.0 + (2.25 - y[1] + y[1] * y[2] * y[2])^2.0 + (2.625 - y[1] + y[1] * y[2] * y[2] * y[2])^2.0",
        "dimension": 2
    },
    "beale-centered": {
        "code": "var d = dim(x); var o = ones(d-1); var y = 9 * x[2:d] + 0.5 * o; var y1 = 9 * x[1] + 3; var a = (1.5 - y1) * o + y1 * y; var b = (2.25 - y1) * o + y1 * y .* y; var c = (2.625 - y1) * o + y1 * y .* y .* y; sqrnorm(a) + sqrnorm(b) + sqrnorm(c)",
        "dimension": -1
    },
    "biggsexp2": {
        "code": "var d = 2; var y = x[1:2] * 20;\t\t\t\t\tlog10(sum(apply(range(10), (exp(-0.1*lambda*y[1]) - 5.0 * exp(-0.1*lambda*y[2]) - exp(-0.1*lambda) + 5.0 * exp(-10.0 * 0.1*lambda))^2.0 )) + 1e-10) + 10.0",
        "dimension": 2
    },
    "biggsexp3": {
        "code": "var d = 3; var y = x[1:3] * 20;\t\t\t\t\tlog10(sum(apply(range(10), (exp(-0.1*lambda*y[1]) - y[3] * exp(-0.1*lambda*y[2]) - exp(-0.1*lambda) + 5.0 * exp(-10.0 * 0.1*lambda))^2.0 )) + 1e-10) + 10.0",
        "dimension": 3
    },
    "biggsexp4": {
        "code": "var d = 4; var y = x[1:4] * 20;\t\t\t\t\tlog10(sum(apply(range(10), (y[3] * exp(-0.1*lambda*y[1]) - y[4] * exp(-0.1*lambda*y[2]) - exp(-0.1*lambda) + 5.0 * exp(-10.0 * 0.1*lambda))^2.0 )) + 1e-10) + 10.0",
        "dimension": 4
    },
    "biggsexp5": {
        "code": "var d = 5; var y = x[1:5] * 20;\t\t\t\t\tlog10(sum(apply(range(11), (y[3] * exp(-0.1*lambda*y[1]) - y[4] * exp(-0.1*lambda*y[2]) + 3.0 * exp(-0.1*lambda*y[5]) - exp(-0.1*lambda) + 5.0 * exp(-10.0 * 0.1*lambda) - 3.0 * exp(-4.0*0.1*lambda) )^2.0 )) + 1e-10) + 10.0",
        "dimension": 5
    },
    "biggsexp6": {
        "code": "var d = 6; var y = x[1:6] * 20;\t\t\t\t\tlog10(sum(apply(range(13), (y[3] * exp(-0.1*lambda*y[1]) - y[4] * exp(-0.1*lambda*y[2]) + y[6] * exp(-0.1*lambda*y[5]) - exp(-0.1*lambda) + 5.0 * exp(-10.0 * 0.1*lambda) - 3.0 * exp(-4.0*0.1*lambda) )^2.0 )) + 1e-10) + 10.0",
        "dimension": 6
    },
    "bird": {
        "code": "var d = 2; var y = x[1:2] * 4 * 3.14159265358979323846 - 2*3.14159265358979323846 * ones(d);\t\t106.76453674926477 + sin(y[1])*exp( (1.0 - cos(y[2]))^2.0 ) + cos(y[2])*exp( (1.0 - sin(y[1]))^2.0 ) + (y[1] - y[2])^2.0",
        "dimension": 2
    },
    "bohachevsky1": {
        "code": "var d = 2; var y = x[1:2] * 200 - 100 * ones(d);\ty[1] * y[1] + 2 * y[2] * y[2] - 0.3*cos(3 * 3.14159265358979323846 *y[1]) - 0.4*cos(4 * 3.14159265358979323846 * y[2]) + 0.7",
        "dimension": 2
    },
    "bohachevsky2": {
        "code": "var d = 2; var y = x[1:2] * 200 - 100 * ones(d);\ty[1] * y[1] + 2 * y[2] * y[2] - 0.3*cos(3 * 3.14159265358979323846 *y[1]) * 0.4*cos(4 * 3.14159265358979323846 * y[2]) + 0.12",
        "dimension": 2
    },
    "bohachevsky3": {
        "code": "var d = 2; var y = x[1:2] * 200 - 100 * ones(d);\ty[1] * y[1] + 2 * y[2] * y[2] - 0.3*cos(3 * 3.14159265358979323846 *y[1] + 4 * 3.14159265358979323846 * y[2]) + 0.3",
        "dimension": 2
    },
    "booth": {
        "code": "var d = 2; var y = x[1:2] * 20 - 10 * ones(d);\t(y[1] + 2 * y[2] - 7.0)^2.0 + (2 * y[1] + y[2] - 5.0)^2.0",
        "dimension": 2
    },
    "boxbetts": {
        "code": "var y1 = x[1] * 0.3 + 0.9; var y2 = x[2]*2.2 + 9.0; var y3 = x[3]*0.3 + 0.9;\t\tsum(apply(range(10), (( (exp(-0.1*lambda*y1) - exp(-0.1*lambda*y2) - exp(-0.1*lambda) + exp(-lambda) ) * y3)^2.0)))",
        "dimension": 3
    },
    "braninrcos1": {
        "code": "var y1 = x[1] * 15.0 - 5.0; var y2 = x[2]*15.0; (y2 - (5.1*y1 * y1) / (4.0*3.14159265358979323846*3.14159265358979323846) + 5.0 * y1 / 3.14159265358979323846 - 6.0)^2.0 + 10.0 * (1.0 - 1.0 / (8 * 3.14159265358979323846))*cos(y1) + 10.0 - 0.3978872",
        "dimension": 2
    },
    "braninrcos2": {
        "code": "var y1 = x[1] * 20.0 - 5.0; var y2 = x[2]*20.0 - 5.0; (y2 - (5.1*y1 * y1) / (4.0*3.14159265358979323846*3.14159265358979323846) + 5.0 * y1 / 3.14159265358979323846 - 6.0)^2.0 + 10.0 * (1.0 - 1.0 / (8 * 3.14159265358979323846))*cos(y1)*cos(y2) + log(y1 * y1 + y2 * y2 + 1.0) + 10.0 - 5.5589143",
        "dimension": 2
    },
    "brent": {
        "code": "var d = 2; var y = x[1:2] * 20 - 10 * ones(d);\t(y[1] + 10.0)^2.0 + (y[2] + 10.0)^2.0 + exp(-y[1] * y[1] - y[2] * y[2])",
        "dimension": 2
    },
    "brown": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\tlog10(sum(apply(range(d-1), (abs(y[lambda]))^(sqrt(abs(y[lambda + 1])) + 1.0) + (abs(y[lambda + 1]))^(sqrt(abs(y[lambda])) + 1.0) )) + 1e-10) + 10.0",
        "dimension": -1
    },
    "bukin2": {
        "code": "var y1 = x[1] * 10.0 - 15.0; var y2 = x[2]*6.0 - 3.0;\t\t100.0 * (y2 - 0.01*y1 * y1 + 1.0)^2.0 + 0.01*(y1 + 10.0)^2.0",
        "dimension": 2
    },
    "bukin4": {
        "code": "var y1 = x[1] * 10.0 - 15.0; var y2 = x[2]*6.0 - 3.0;\t\t100.0 * y2 * y2 + 0.01*abs(y1 + 10.0)",
        "dimension": 2
    },
    "bukin6": {
        "code": "var y1 = x[1] * 10.0 - 15.0; var y2 = x[2]*6.0 - 3.0;\t\t100.0 * sqrt(abs(y2 - 0.01*y1*y1)) + 0.01*abs(y1 + 10.0)",
        "dimension": 2
    },
    "camel3hump": {
        "code": "var y1 = x[1] * 10.0 - 5.0; var y2 = x[2]*10.0 - 5.0;\t\t2.0*y1 * y1 - 1.05*(y1^4.0) + (y1^6.0) / 6.0 + y1 * y2 + y2 * y2",
        "dimension": 2
    },
    "camel6hump": {
        "code": "var y1 = x[1] * 10.0 - 5.0; var y2 = x[2]*10.0 - 5.0;\t\t(4.0 - 2.1*y1 * y1 + (y1^4.0) / 3.0)*y1 * y1 + y1 * y2 + (4.0 * y2 * y2 - 4.0)*y2 * y2 - (-1.031628453489878)",
        "dimension": 2
    },
    "chen5": {
        "code": "var y1 = x[1] * 1000.0 - 500.0; var y2 = x[2]*1000.0 - 500.0; -0.001 / (1e-6 + (y1*y1 + y2*y2 - 1)^2.0) - 0.001 / (1e-6 + (y1*y1 + y2*y2 - 0.5)^2.0) - 0.001 / (1e-6 + (y1 - y2)^2.0) - (-2000) + 5e-4",
        "dimension": 2
    },
    "chenbird": {
        "code": "var y1 = x[1] * 1000.0 - 500.0; var y2 = x[2]*1000.0 - 500.0; -0.001 / (1e-6 + (y1 - 0.4*y2 - 0.1)^2.0) - 0.001 / (1e-6 + (2*y1 - 0.4*y2 - 1.5)^2.0) - (-2000)  + 1e-12",
        "dimension": 2
    },
    "chichinadze": {
        "code": "var y1 = x[1] * 60.0 - 30.0; var y2 = x[2]*60.0 - 30.0;\t\ty1 * y1 - 12.0 * y1 + 11.0 + 10.0 * cos(3.14159265358979323846*y1 / 2.0) + 8.0 * sin(5.0*3.14159265358979323846*y1 / 2.0) - 0.2*sqrt(5.0)*exp(-((0.5*(y2 - 0.5))^2.0)) - (-42.94438701899099)",
        "dimension": 2
    },
    "cigar": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); 1e-6 * sqr(y[1]) + sqrnorm(y[2:d])",
        "dimension": -1
    },
    "cigtab": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); sqr(y[1]) + 1e-3 * sqrnorm(y[2:d-1]) + 1e-6 * sqr(y[d])",
        "dimension": -1
    },
    "colville": {
        "code": "var d = dim(x); var y = x*20 - 10 * ones(d);\t\t\t\t\t100.0 * (y[1] - y[2] * y[2])^2.0 + (1 - y[1])^2.0 + 90.0 * (y[4] - y[3] * y[3])^2.0 + (1.0 - y[3])^2.0 + 10.1*(y[2] - 1.0)^2.0 + (y[4] - 1.0)^2.0 + 19.8*(y[2] - 1.0)*(y[4] - 1.0)",
        "dimension": -1
    },
    "cosinemixt": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t\tsum(apply(range(d), 0.1*cos(5 * 3.14159265358979323846*y[lambda]) + y[lambda] * y[lambda] )) + (0.06302*d)",
        "dimension": -1
    },
    "crossinray": {
        "code": "var y1 = x[1] * 20.0 - 10.0; var y2 = x[2]*20.0 - 10.0;\t\t-0.0001*(abs(sin(y1)*sin(y2)*exp(abs(100.0 - sqrt(y1 * y1 + y2 * y2) / 3.14159265358979323846))) + 1.0)^0.1 - (-2.06261187082274)",
        "dimension": 2
    },
    "csendes": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t\tsum(apply(range(d), (y[lambda]^2.0)*(2.0 + sin(1.0/(y[lambda]+1.23e-10)))))",
        "dimension": -1
    },
    "cube": {
        "code": "var y1 = x[1] * 20.0 - 10.0; var y2 = x[2]*20.0 - 10.0;\t\t100.0*(y2 - y1^3.0)^2.0 + (1 - y1)^2.0",
        "dimension": 2
    },
    "damavandi": {
        "code": "var y1 = x[1] * 14.0 - 0.0; var y2 = x[2]*14.0 - 0.0;\t\t(1.0 - (abs(sin(3.14159265358979323846*(y1 - 2.0))*sin(3.14159265358979323846*(y2 - 2.0)) / (3.14159265358979323846*3.14159265358979323846*(1.23e-10 + y1 - 2.0)*(1.23e-10 + y2 - 2.0))))^ 5.0) * (2.0 +(1.23e-10 + y1 - 7.0)^2.0 + 2.0*(1.23e-10 + y2 - 7.0)^2.0) - 2.0",
        "dimension": 2
    },
    "deb1": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t\tsum(apply(range(d), (sin(5.0 * 3.14159265358979323846 * y[lambda]))^5.0 ))/d + 1.0",
        "dimension": -1
    },
    "deb3": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t\tsum(apply(range(d), (sin(5.0 * 3.14159265358979323846 * ((abs(y[lambda])^0.75) - 0.05)))^6.0 ))/d",
        "dimension": -1
    },
    "decanomial": {
        "code": "var y1 = x[1] * 20.0 - 10.0; var y2 = x[2]*20.0 - 10.0;\t\t0.001*(abs(y2^4.0 + 12.0 * y2^3.0 + 54.0 * y2^2.0 + 108.0 * y2 + 81.0) + abs(y1^10.0 - 20 * y1^9.0 + 180 * y1^8.0 - 960 * y1^7.0 + 3360 * y1^6.0 - 8064 * y1^5.0 + 13340 * y1^4.0 - 15360 * y1^3.0 + 11520 * y1^2.0 - 5120 * y1 + 2624))^2.0",
        "dimension": 2
    },
    "deckkers": {
        "code": "var y1 = x[1] * 40.0 - 20.0; var y2 = x[2]*40.0 - 20.0;\t\t1e+5 * y1 * y1 + y2 * y2 - (y1 * y1 + y2 * y2)^2.0 + 1e-5 * (y1 * y1 + y2 * y2)^4.0 - (-24777 + 0.48165768230319373)",
        "dimension": 2
    },
    "devilliersglasser": {
        "code": "var d = dim(x); var y = x*200 - 100 * ones(d);\t\tsum(apply(range(24), (y[1] * (abs(y[2])^(0.1*(lambda-1))) * sin(y[3] * 0.1*(lambda-1) + y[4]) - 60.137 * (1.371^(0.1*(lambda-1))) * sin(3.112*0.1*(lambda-1) + 1.761))^2.0 ))",
        "dimension": 4
    },
    "devilliersglasser2": {
        "code": "var d = dim(x); var y = x*200 - 100 * ones(d);\t\tsum(apply(range(16), (y[1] * (abs(y[2])^(0.1*(lambda-1))) * tanh(y[3] * 0.1*(lambda-1) + sin(y[4] * 0.1*(lambda-1)))*cos(0.1*(lambda-1)*exp(y[5])) - 53.81 * (1.27^(0.1*(lambda-1))) * tanh(3.012*0.1*(lambda-1) + sin(2.13*0.1*(lambda-1)))*cos(0.1*(lambda-1)*exp(0.507)) )^2.0 ))",
        "dimension": -1
    },
    "diffpow": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); sum(apply(y, abs(lambda)) .^ apply(range(d), 2 + 10 * (lambda-1) / (d - 1)))",
        "dimension": -1
    },
    "diffpow-centered": {
        "code": "var d = dim(x); sum(apply(x, abs(10 * lambda)) .^ apply(range(d), 2 + 10 * (lambda-1) / (d - 1)))",
        "dimension": -1
    },
    "dixonprice": {
        "code": "var d = dim(x); var y = x*20 - 10 * ones(d);\t\t\t\t\t(y[1] - 1.0)^2.0 + sum(apply(range(d-1), (lambda + 1)*(2.0 * y[lambda+1] * y[lambda+1] - y[lambda])^2.0 ))",
        "dimension": -1
    },
    "dolan": {
        "code": "var d = dim(x); var y = x*200 - 100 * ones(d);\t\t\t\tabs((y[1] + 1.7*y[2])*sin(y[1]) - 1.5*y[3] - 0.1*y[4] * cos(y[4] + y[5] - y[1]) + 0.2*y[5] * y[5] - y[2] - 1.0)",
        "dimension": 5
    },
    "easom": {
        "code": "var y1 = x[1] * 200.0 - 100.0; var y2 = x[2]*200.0 - 100.0;\t-cos(y1)*cos(y2)*exp(-((y1 - 3.14159265358979323846)^2.0) - ((y2 - 3.14159265358979323846)^2.0)) + 1.0",
        "dimension": 2
    },
    "eavd": {
        "code": "var y1 = x[1] * 1000.0 - 500.0; var y2 = x[2]*1000.0 - 500.0;\tabs(y1 * y1 + y2 - 10.0) + abs(y1 + y2 * y2 - 7.0) + abs(y1 * y1 - y2 * y2 * y2 - 1.0) - (0.470424)",
        "dimension": 2
    },
    "eggcrate": {
        "code": "var y1 = x[1] * 10.0 - 5.0; var y2 = x[2]*10.0 - 5.0;\t\ty1*y1 + y2*y2 * 25*( sin(y1)^2.0 + sin(y2)^2.0)",
        "dimension": 2
    },
    "eggholder": {
        "code": "var d = dim(x); var y = x*1024 - 512 * ones(d);\t\t\t\tsum(apply(range(d-1), -(y[lambda + 1] + 47.0)*sin(sqrt(abs(y[lambda + 1] + y[lambda] / 2.0 + 47.0))) - y[lambda] * sin(sqrt(abs(y[lambda] - y[lambda + 1] - 47.0))) )) + 959.640631472179",
        "dimension": -1
    },
    "eggholder-variant-centered": {
        "code": "var d = dim(x); var y = 10*x[2:d]; var y1 = 10*x[1]; var a = y1 + sin(y1) + 0.5*sin(1.9*y1) + 2.3*sin(3.4*y1); var b = sum(apply(y, lambda + sin(lambda - 0.8*sin(1.3*lambda+3*y1) + 2.6*sin(3.1*lambda-0.8*y1)))); sqrnorm(x) * (1 + sin(a + b)^2)",
        "dimension": -1
    },
    "ellipse": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); (apply(range(d), 1e+6 ^ ((lambda-1) / (d-1)))) * (y .* y)",
        "dimension": -1
    },
    "ellipsoid-illconditioned-centered": {
        "code": "var d = dim(x); (apply(range(d), 1e4 ^ ((lambda-1) / (d-1)))) * (x .* x)",
        "dimension": -1
    },
    "ellipsoid-moderate-centered": {
        "code": "var d = dim(x); (apply(range(d), 25 ^ ((lambda-1) / (d-1)))) * (x .* x)",
        "dimension": -1
    },
    "exp2func": {
        "code": "var y1 = x[1] * 20.0; var y2 = x[2]*20.0;\t\t\t\t\tsum(apply(range(10), (exp(-(lambda-1)*y1 / 10.0) - 5.0*exp(-(lambda-1)*y2 / 10.0) - exp(-(lambda-1) / 10.0) + 5.0*exp(-(lambda-1)))^2.0 ))",
        "dimension": 2
    },
    "expfunc": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t\t1.0-exp(-0.5*sqrnorm(y))",
        "dimension": -1
    },
    "freudensteinroth": {
        "code": "var y1 = x[1] * 20.0 - 10.0; var y2 = x[2]*20.0 - 10.0;\t(y1 - 13.0 + ((5.0 - y2)*y2 - 2.0)*y2)^2.0 + (y1 - 29.0 + ((1.0 + y2)*y2 - 14.0)*y2)^2.0",
        "dimension": 2
    },
    "gear": {
        "code": "var d = dim(x); var y = x*48 + 12 * ones(d);\t\t\t\t\t(1.0/6.931 - y[1]*y[2]/(1.23e-10 + abs(y[3]*y[4])))^2.0",
        "dimension": 4
    },
    "giunta": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t\t0.6 + sum(apply(range(2), (sin(1.0 - 16.0*y[lambda] / 15.0))^2.0 - 0.02*sin(4.0 - 64.0*y[lambda] / 15.0) - sin(1.0 - 16.0 * y[lambda] / 15.0) )) - (0.0644704205)",
        "dimension": 2
    },
    "goldsteinprice": {
        "code": "var y1 = x[1] * 4.0 - 2.0; var y2 = x[2]*4.0 - 2.0;\t\t(1.0 + ((y1 + y2 + 1.0)^2.0)*(19.0 - 14.0*y1 + 3.0*y1 * y1 - 14.0*y2 + 6.0 * y1 * y2 + 3.0 *y2 * y2)) * (30.0 + ((2.0*y1 - 3.0*y2)^2.0) * (18.0 - 32.0*y1 + 12.0*y1 * y1 + 48.0*y2 - 36.0*y1 * y2 + 27.0*y2 * y2)) - 3.0 +  1e-12",
        "dimension": 2
    },
    "goldsteinprice-centered": {
        "code": "var d = dim(x); var o = ones(d-1); var y = 5 * x[2:d] - o; var y1 = 5 * x[1]; var a = (y1 + 1) * o + y; var b = (19 - 14 * y1 + 3 * y1 * y1) * o + (-14 + 6 * y1) * y + 3 * y .* y; var c = (2 * y1) * o - 3 * y; var f = (18 - 32 * y1 + 12 * y1 * y1) * o + (48 - 36 * y1) * y + 27 * y .* y; (o + a .* a .* b) * (30 * o + c .* c .* f) - 3",
        "dimension": -1
    },
    "griewank": {
        "code": "var d = dim(x); var y = x*200 - 100 * ones(d);\t\t\t\tsqrnorm(y)/4000.0 - prod(apply(range(d), cos(y[lambda]/sqrt(lambda)) )) + 1.0",
        "dimension": 2
    },
    "gulfresearch": {
        "code": "var y1 = x[1] * 99.9 + 0.1; var y2 = x[2]*25.6; var y3 = x[3]*5;\tsum(apply(range(99), (exp(-((abs(25.0 + (-50.0 * log(0.01*lambda)) ^ (1.0 / 1.5) - y2)) ^ abs(y3)) / (1.23e-10+abs(y1)) - 0.01*lambda)) ^ 2.0 ))",
        "dimension": 3
    },
    "hansen": {
        "code": "var y1 = x[1] * 20 - 10; var y2 = x[2]*20 - 10;\t\t\t\tsum(apply(range(5),\tlambda*cos((lambda-1)*y1 + lambda) )) * sum(apply(range(5), lambda*cos((lambda+1)*y2 + lambda) )) - (-176.54179315016476)",
        "dimension": 2
    },
    "happycat-centered": {
        "code": "var Q = 9*sqrnorm(x); var S = 3*sum(x); (Q*Q - 4*Q*S + 4*S*S)^0.125 * Q / (2*dim(x))",
        "dimension": -1
    },
    "helicalvalley": {
        "code": "var d = dim(x); var y = x*20 - 10 * ones(d);\t\t\t\t100.0 * ((y[2] - 10.0*(atan(y[2] / (1.23e-10+abs(y[1]))) / (2.0*3.14159265358979323846)))^2.0 + (sqrt(y[1] * y[1] + y[2] * y[2]) - 1.0)^2.0) + y[3] * y[3]",
        "dimension": -1
    },
    "himmelblau": {
        "code": "var y1 = x[1] * 10 - 5; var y2 = x[2]*10 - 5;\t\t\t\t(y1 * y1 + y2 - 11.0)^2.0 + (y1 + y2 * y2 - 7.0)^2.0",
        "dimension": 2
    },
    "hosaki": {
        "code": "var y1 = x[1] * 5; var y2 = x[2]*6;\t\t\t\t\t\t\t(1.0 - 8.0*y1 + 7.0*y1 * y1 - 7.0*(y1^3.0) / 3.0 + (y1^4.0) / 4.0)*y2 * y2 * exp(-y2) - (-2.345811576102)",
        "dimension": 2
    },
    "jennrichsampson": {
        "code": "var y1 = x[1] * 2 - 1; var y2 = x[2]*2 - 1;\t\t\t\tsum(apply(range(10), (2.0 + 2.0*lambda - (exp(lambda*y1) + exp(lambda*y2)))^2.0 )) - (124.36218235561)",
        "dimension": 2
    },
    "leon": {
        "code": "var y1 = x[1] * 2.4 - 1.2; var y2 = x[2]*2.4 - 1.2;\t\t\t100.0 * (y2 - y1 * y1)^2.0 + (1.0 - y1)^2.0",
        "dimension": 2
    },
    "matyas": {
        "code": "var y1 = x[1] * 20 - 10; var y2 = x[2]*20 - 10;\t\t\t\t0.26 * (y1 * y1 + y2 * y2) - 0.48 * y1 * y2",
        "dimension": 2
    },
    "mccormick": {
        "code": "var y1 = x[1] * 5.5 - 1.5; var y2 = x[2]*6.0 - 3.0;\t\t\tsin(y1 + y2) + (y1 - y2)^2.0 - 1.5*y1 + 2.5*y2 + 1.0 - (-1.91322295499)",
        "dimension": 2
    },
    "mielecantrell": {
        "code": "var d = dim(x); var y = x*2 - 1 * ones(d);\t\t\t\t(exp(-y[1]) - y[2])^4.0 + 100.0 * ((y[2] - y[3])^6.0) + (tan(y[3] - y[4]))^4.0 + y[1]^8.0",
        "dimension": -1
    },
    "mishra1": {
        "code": "var d = dim(x); var y = x;\t\t\t\t\t\t\t\t\tvar val = d - sum(apply(range(d-1), y[lambda] ));\t(1.0 + val)^val - 2.0",
        "dimension": -1
    },
    "rastrigin": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); sqrnorm(y) + 10 * d - 10 * sum(apply(y, cos(6.28318530717959 * lambda)))",
        "dimension": -1
    },
    "rosenbrock": {
        "code": "var d = dim(x); var y = x*12 - 5 * ones(d); var xm = y[1:d-1]; sqrnorm(ones(d-1) - xm) + 100 * sqrnorm(y[2:d] - xm .* xm)",
        "dimension": -1
    },
    "rosenbrock-centered": {
        "code": "var d = dim(x); var y = 5 * x; var z = (y + ones(d)); sqrnorm(y[1:d-1]) + 100 * sqrnorm(z[2:d] - z[1:d-1] .* z[1:d-1])",
        "dimension": -1
    },
    "sectorvariant-centered": {
        "code": "sum(apply(x, abs(lambda) - 0.99 * lambda))",
        "dimension": -1
    },
    "sharpridge": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d);  5e-6 +  1e-6 * y[1] + sum(apply(y[2:dim(y)], abs(lambda)) .^ 0.25)",
        "dimension": -1
    },
    "sphere": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); sqrnorm(y)",
        "dimension": -1
    },
    "sphere-centered": {
        "code": "sqrnorm(x)",
        "dimension": -1
    },
    "spiral-centered": {
        "code": "var d = dim(x); var y1 = 4 * x[1]; var y = 4 * x[2:d]; sum(apply(y, (lambda^2 + y1^2 - atan(lambda/y1) - 1.57)^2)) + sqrnorm(x)",
        "dimension": -1
    },
    "tablet": {
        "code": "var d = dim(x); var y = x*10 - 5 * ones(d); sqr(y[1]) + 1e-6 * sqrnorm(y[2:d])",
        "dimension": -1
    },
    "target-centered": {
        "code": "sqrnorm(x) + prod(apply(x, abs(lambda)))^(1/dim(x)) * sin(20 * norm(x))^2",
        "dimension": -1
    },
    "weierstrass-centered": {
        "code": "sum(apply(x, sin(lambda)^2 + sin(3*lambda)^2/2 + sin(9*lambda)^2/4 + sin(27*lambda)^2/8 + sin(81*lambda)^2/16 + sin(243*lambda)^2/32))",
        "dimension": -1
    }
}